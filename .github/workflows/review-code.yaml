
name: Review PR Diff

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  reviewmycode:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the PR code
      - name: Checkout PR Code
        uses: actions/checkout@v2

      # Step 2: Fetch all history for diff
      - name: Fetch All History for Diff
        run: git fetch --all

      # Step 3: Get PR Diff and File Paths
      - name: Get PR Diff and File Paths
        id: diff
        run: |
          echo "Getting PR diff and file paths between base and head"
          git diff origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} > diff.txt
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} > file_paths.txt

      # Step 4: Echo Diff and File Paths
      - name: Echo Diff and File Paths
        run: |
          echo "Diff content:"
          cat diff.txt  # Output the content of diff.txt
          echo "File paths:"
          cat file_paths.txt  # Output the content of file_paths.txt

      # Step 5: Split the Diff by File and Send to Backend for Review
      - name: Send Diff for Each File to Backend for Review
        run: |
          # Read the diff and file paths
          diff_content=$(cat diff.txt)
          file_paths=$(cat file_paths.txt)

          # Split the diff by file and send requests
          for file_path in $(cat file_paths.txt); do
            # Extract the diff for the current file
            file_diff=$(awk "/^diff --git a\/$file_path/,/^diff --git/" diff.txt | head -n -1 || true)

            # If file_diff is empty, skip it
            if [ -z "$file_diff" ]; then
              echo "No changes detected for file: $file_path"
              continue
            fi

            # Escape the diff and file paths to JSON-safe strings
            escaped_diff=$(echo "$file_diff" | jq -Rsa .)
            escaped_file_path=$(echo "$file_path" | jq -Rsa .)

            # Echo for debugging
            echo "Sending review for file: $file_path"
            echo "Diff content: $escaped_diff"
            echo "File path: $escaped_file_path"

            # Send request to backend
            curl -X POST "https://app5-latest.onrender.com/openai/api/v1/review-pr-diff" \
              -H "Content-Type: application/json" \
              -d @- <<EOF
              {{
                "diff": $escaped_diff,
                "owner": "${{ github.repository_owner }}",
                "repo": "${{ github.event.pull_request.head.repo.name }}",
                "prNumber": "${{ github.event.pull_request.number }}",
                "commitId": "${{ github.event.pull_request.head.sha }}",
                "file_paths": $escaped_file_path
              }}
  EOF
  done
