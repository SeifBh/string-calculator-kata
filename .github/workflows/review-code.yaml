name: Comment on PR Diff

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  reviewmycode:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the PR code
      - name: Checkout PR Code
        uses: actions/checkout@v2

      # Step 2: Fetch all history for diff
      - name: Fetch All History for Diff
        run: git fetch --all

      # Step 3: Get PR Diff and File Paths
      - name: Get PR Diff and File Paths
        id: diff
        run: |
          echo "Getting PR diff and file paths between base and head"
          
          # Get the diff between the base and head branches and store it in a file
          git diff origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} > diff.txt

          # Get the changed file paths and store them in a file
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} > file_paths.txt

          # Set the outputs to be used in later steps
          echo "DIFF_CONTENT=$(cat diff.txt)" >> $GITHUB_ENV
          echo "FILE_PATHS=$(cat file_paths.txt)" >> $GITHUB_ENV

      # Step 4: Print the diff and file paths for debugging
      - name: Print PR Diff and File Paths for Debugging
        run: |
          echo "PR Diff: ${{ env.DIFF_CONTENT }}"
          echo "Changed file paths: ${{ env.FILE_PATHS }}"

      # Step 5: Send PR Diff and File Paths to ReviewMyCode API
      - name: Send Diff and File Paths to ReviewMyCode API
        run: |
          echo "Sending PR diff and file paths to backend"
          curl -X POST "https://app5-latest.onrender.com/openai/api/v1/review-pr-diff" \
          -H "Content-Type: application/json" \
          -d @- <<EOF
          {
            "diff": "${{ env.DIFF_CONTENT }}",
            "owner": "${{ github.repository_owner }}",
            "repo": "${{ github.event.pull_request.head.repo.name }}",
            "prNumber": "${{ github.event.pull_request.number }}",
            "commitId": "${{ github.event.pull_request.head.sha }}",
            "file_paths": "${{ env.FILE_PATHS }}"
          }
          EOF
          echo "Request sent to backend"

      # Step 6: Mock success message
      - name: Print Mock Review Result
        run: echo "Mock review completed. Review comments have been sent."